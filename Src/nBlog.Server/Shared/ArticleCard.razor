@using nBlog.sdk.Model;
@using NBlog.Server.Model;
@using Toolbox.Extensions;
@using System.IO;

<div class="card border-0 mb-3" style="width:100%">
    <div class="row no-gutters">
        <div class="col-md-3 p-md-2">
            <img src="@ImageSrc" class="card-img" style="max-height: 250px" />
            @*<img src="@Manifest.ImageFile" class="card-img" />*@
        </div>
        <div class="col-md-8">
            <div class="card-body">
                <h4 class="card-title">
                    <NavLink href="">@Manifest.Title</NavLink>
                </h4>
                <p>@AuthorText</p>
                <p class="card-text">@Manifest.Summary</p>

                <div class="row">
                    <div class="col-md-12">
                        <hr class="card-footer-divider" />
                    </div>
                    <div class="col-md-12 pt-1">

                        @if (Manifest.Tags != null && Manifest.Tags.Count > 0)
                        {
                            @foreach (var item in (Manifest.Tags ?? Array.Empty<string>()))
                            {
                                <div class="float-right">
                                    <NavLink class="btn border topic-btn-small" href="">@item</NavLink>
                                </div>
                            }
                        }
                    </div>
                </div>
                <div class="mb-4">
                    <NavLink class="btn-blog" href="">Read more <span class="oi oi-arrow-right"></span></NavLink>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public ArticleCache ArticleCache { get; set; } = null!;

    public ArticleManifest Manifest => ArticleCache.GetArticleManifest();

    private string AuthorText => (Manifest.Author.IsEmpty() ? string.Empty : Manifest.Author + " ") + Manifest.Date.ToString("MMMM dd, yyyy");

    private string GetIconImageBase64()
    {
        if (Manifest.ImageFile.IsEmpty()) return string.Empty;

        byte[] bytes = ArticleCache.GetPackageItem(Manifest.ImageFile);
        string base64 = Convert.ToBase64String(bytes);

        return base64;
    }

    private string ImageSrc
    {
        get
        {
            if (Manifest.ImageFile.IsEmpty()) return string.Empty;

            string extension = Path.GetExtension(Manifest.ImageFile).Remove(0);
            return $"data:image/{extension};base64, {GetIconImageBase64()}";
        }
    }
}

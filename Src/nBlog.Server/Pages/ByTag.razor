@page "/tag/{base64}"

@using nBlog.sdk.Model;
@using NBlog.Server.Services;
@using NBlog.Server.Model;
@using System.Text;

<div class="row mt-md-5">
    <div class="col-md-9">
        <div class="row">
            <span class="font-weight-light">@Title</span>
        </div>
        <div class="row">
            @foreach (var item in Articles)
            {
                <ArticleCard ArticleCache="@item" />
            }
        </div>
    </div>

    <RightPanel />
</div>


@code {
    private const int _maxPage = 10;

    [Parameter]
    public string Base64 { get; set; } = null!;

    [Inject]
    public DirectoryService DirectoryService { get; set; } = null!;

    [Inject]
    public ArticleService ArticleService { get; set; } = null!;

    private IReadOnlyList<ArticleCache> Articles { get; set; } = Array.Empty<ArticleCache>();

    private string Title { get; set; } = null!;

    protected override async Task OnParametersSetAsync()
    {
        string tag = Encoding.UTF8.GetString(Convert.FromBase64String(Base64));
        Title = $"Recent post for {tag}...";

        IReadOnlyList<ArticleManifest> manifests = await DirectoryService.GetByTag(tag, 0, _maxPage);

        var list = new List<ArticleCache>();
        foreach (var item in manifests)
        {
            ArticleCache? articleCache = await ArticleService.Get(new ArticleId(item.ArticleId));
            if (articleCache == null) continue;

            list.Add(articleCache);
        }

        Articles = list;
    }
}